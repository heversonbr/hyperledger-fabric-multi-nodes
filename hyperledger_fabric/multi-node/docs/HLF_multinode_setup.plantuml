@startuml
title HLF multi node setup



box "Administrator domain" #LightBlue
    actor admin
	participant ca_client
    participant ca_server
    collections config_files
    collections env_variables 
    
    database ca_server_db

end box

box "Organization 1 domain: ACME " #LightBlue
	participant acme_administrator
    participant ca_client

end box

box "Organization 2 domain: Orderer " #LightBlue
	participant orderer_administrator
    participant ca_client
end box

' NOTE : for the moment the interactions may sound local , because it follows the script, adaptations are required.

admin -> ca_server: Sets up initail identities [./ca/multi-org-ca/run-all.sh]


activate ca_server

group Start CA Server [server.sh start]
    ca_server <-- config_files : **cp:__** fabric_ca_server_config.yaml to ./server
    ca_server <-- ca_server : **__run:__** fabric-ca-server start fabric_ca_server_config.yaml
end 

group Enroll admin identity for CA server [server.sh enroll]
    ca_server <-- config_files : **__cp:__** fabric_ca_client_config.yaml to ./client/caserver/admin
    ca_server <-- ca_server : **__run:__**  fabric-ca-client enroll -u http://admin:pw@localhost:7054
end


group Enroll admin identities for Orgs [register-enroll-admins.sh]

    group register Org admins
        'set CA admin server. Ex: source setclient.sh caserver admin
        ca_server -> env_variables : **__export:__** FABRIC_CA_CLIENT_HOME=`pwd`/client/caserver/admin
        
        loop for each Organization admin //org-name-admin//
            ca_server -> env_variables : **__export:__** ATTRIBUTES='"hf.Registrar.Roles=peer,user,client","hf.AffiliationMgr=true","hf.Revoker=true"'
            ca_server <-- ca_server : **__run:__** fabric-ca-client register ""--id.type"" client ""--id.name"" //org-name-admin// ""--id.secret"" //org-admin-password// ""--id.affiliation"" //org-name// ""--id.attrs"" $ATTRIBUTES
            'cmd example for acme org:  fabric-ca-client register --id.type client --id.name acme-admin --id.secret password --id.affiliation acme --id.attrs $ATTRIBUTES
        end

        group for **orderer-admin** 
            ca_server -> env_variables : **__export:__** ATTRIBUTES='"hf.Registrar.Roles=orderer"'
            ca_server <-- ca_server : **__run:__** fabric-ca-client register ""--id.type"" client ""--id.name"" **orderer-admin** ""-id.secret"" //orderer-admin-password// ""--id.affiliation"" orderer ""--id.attrs"" $ATTRIBUTES
        end

    end

    group enroll Org admins
        loop for aech Organization //org-name//  [e.g., acme, budget, orderer]
            'set CA admin server. Ex: source setclient.sh org-name admin
            ca_server -> env_variables : **__export:__** FABRIC_CA_CLIENT_HOME=`pwd`/client/org-name/admin
            ca_server <-- config_files : **__cp:__** ../../setup/config/multi-org-ca/yaml.0///org-name///fabric-ca-client-config.yaml FABRIC_CA_CLIENT_HOME/fabric-ca-client-config.yaml
            ca_server <-- ca_server : **__run:__**  fabric-ca-client enroll -u http://acme-admin:pw@localhost:7054
            ca_server <-- config_files : **__cp:__** FABRIC_CA_CLIENT_HOME/../../caserver/admin/msp/signcerts/*  $FABRIC_CA_CLIENT_HOME/msp/admincerts
        end
    end
    
    group setup Orgs MSP
        loop for aech Organization //org-name//  [e.g., acme, budget, orderer]
            'set CA admin server. Ex: source setclient.sh org-name admin
            ca_server -> env_variables : **__export:__** FABRIC_CA_CLIENT_HOME=`pwd`/client/org-name/admin

            ' NOTE: TBC : the file ca-cert.pem is potentially generated by fabric-ca-server start fabric_ca_server_config.yaml
            ca_server -> env_variables : **__export:__** ROOT_CA_CERTIFICATE=./server/ca-cert.pem   
            ca_server -> env_variables : **__export:__** DESTINATION_CLIENT_HOME="$FABRIC_CA_CLIENT_HOME/.."

            ca_server <-- ca_server : **__run:__**  mkdir -p $DESTINATION_CLIENT_HOME/msp/cacerts
            ca_server <-- ca_server : **__run:__**  mkdir -p $DESTINATION_CLIENT_HOME/msp/admincerts 
            ca_server <-- ca_server : **__run:__**  mkdir -p $DESTINATION_CLIENT_HOME/msp/keystore  

            ' Copy the Root CA Cert
            ca_server <-- config_files : **__cp:__** ROOT_CA_CERTIFICATE $DESTINATION_CLIENT_HOME/msp/cacerts

            ' Copy the admin certs - ORG admin is the admin for the specified Org
            ca_server <-- config_files : **__cp:__** FABRIC_CA_CLIENT_HOME/msp/signcerts/* $DESTINATION_CLIENT_HOME/msp/admincerts 
        end
    end


end


return ca_server started

deactivate ca_server



@enduml